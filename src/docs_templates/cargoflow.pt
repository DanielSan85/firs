<tal:economies repeat="economy registered_economies">
    <tal:vars define="banned_cargos doc_helper.get_cargoflow_banned_cargos();
                      supply_cargos doc_helper.get_cargoflow_supply_cargos();
                      wormhole_cargos doc_helper.get_cargoflow_wormhole_cargos(economy)">
        digraph ${doc_helper.get_economy_name_char_safe(economy)} {
            fontname="sans-serif"
            stylesheet="static/css/cargoflow_styles.css"
            rankdir="LR"
            ranksep="0.88"
            nodesep="0.88"
            newrank=true
            overlap="compress"
            output="edgesfirst"
            tooltip="${doc_helper.get_economy_name(economy)}"

            <tal:cargos repeat="cargo sorted(economy_schemas[economy].enabled_cargos, key=doc_helper.get_cargo_name)">
                <tal:not_banned condition="(cargo.id not in banned_cargos) and (cargo.id not in doc_helper.get_cargoflow_supply_cargos())">
                    C_${cargo.id} [
                        shape="box"
                        label=<
                            <table>
                                <tr><td>${doc_helper.get_cargo_name(cargo)}</td></tr>
                                <tal:wormhole repeat="industry wormhole_cargos['by_cargo'].get(cargo.id, [])">
                                    <tr><td BGCOLOR="white"><font POINT-SIZE="32" COLOR="BLACK">To ${doc_helper.get_industry_name(industry, economy)}</font></td></tr>
                                </tal:wormhole>
                            </table>
                        >
                        href="cargos.html#${cargo.id}"
                        target="_top"
                        fontname="sans-serif"
                        fontcolor=white
                        fontsize=32
                        style="filled"
                        labelloc=c
                        color="${doc_helper.get_cargo_colour_as_hex_triple_with_hash(cargo, economy)}"
                        id="${cargo.id}"
                    ]
                </tal:not_banned>
            </tal:cargos>

            <tal:industries repeat="industry sorted(economy_schemas[economy].enabled_industries, key=doc_helper.get_industry_name)">
                <tal:not_banned condition="not getattr(industry, 'town_industry_for_cargoflow', False)">
                    I_${industry.id} [
                        shape=none
                        fontsize=32
                        label=<
                            <table border="0" cellborder="1" cellspacing="0" cellpadding="0" COLOR="azure3" BGCOLOR="white">
                                <tr><td><IMG SRC="static/img/industries/${industry.id}.png" /></td></tr>
                                <!--! nested table for text offers more control + better appearance -->
                                <tr><td><table BGCOLOR="ghostwhite" border="0" cellborder="0" cellspacing="5" cellpadding="0">
                                    <tr><td>${doc_helper.get_industry_name(industry, economy)}</td></tr>
                                    <tal:cargos repeat="cargo doc_helper.cargos_accepted_by_industry(industry, economy)">
                                         <tal:supplies condition="cargo.id in supply_cargos">
                                            <tr><td><font POINT-SIZE="20">Requires ${doc_helper.get_cargo_name(cargo)}</font></td></tr>
                                        </tal:supplies>
                                        <tal:banned condition="(cargo.id in banned_cargos) and not getattr(industry, 'town_industry_for_cargoflow', False)">
                                            <tr><td><font POINT-SIZE="20">Requires ${doc_helper.get_cargo_name(cargo)}</font></td></tr>
                                        </tal:banned>
                                        <tal:town_industries condition="getattr(industry, 'town_industry_for_cargoflow', False)">
                                            <tr><td><font POINT-SIZE="20">Requires ${doc_helper.get_cargo_name(cargo)}</font></td></tr>
                                        </tal:town_industries>
                                        <tal:wormhole condition="cargo in wormhole_cargos['by_industry'].get(industry.id, [])">
                                            <tr><td><font POINT-SIZE="20">Requires ${doc_helper.get_cargo_name(cargo)}</font></td></tr>
                                        </tal:wormhole>
                                    </tal:cargos>
                                    <tal:produced_cargos repeat="cargo doc_helper.cargos_produced_by_industry(industry, economy)">
                                        <tal:supply_output condition="cargo.id in doc_helper.get_cargoflow_supply_cargos()">
                                            <tr><td><font POINT-SIZE="20">Produces ${doc_helper.get_cargo_name(cargo)}</font></td></tr>
                                        </tal:supply_output>
                                    </tal:produced_cargos>
                                </table></td></tr>
                            </table>
                        >
                        id="${industry.id}"
                        href="industries.html#${industry.id}" target="_top" fontname="sans-serif"
                        tooltip="${doc_helper.get_industry_name(industry, economy)}"
                    ]
                </tal:not_banned>

                <tal:not_town_industries condition="not: getattr(industry, 'town_industry_for_cargoflow', False)">
                    <tal:accepted_cargos repeat="cargo doc_helper.cargos_accepted_by_industry(industry, economy)">
                        <tal:not_banned condition="(cargo.id not in banned_cargos) and (cargo.id not in supply_cargos) and (cargo not in wormhole_cargos['by_industry'].get(industry.id, []))">
                            <tal:test condition="cargo.id not in doc_helper.get_cargoflow_graph_tuning(economy).get('cargos_with_individual_accept_nodes',[])">
                                C_${cargo.id} -> ${"T_town_industries" if getattr(industry, 'town_industry_for_cargoflow', False) else "I_" + industry.id} [
                                    <!--! edge weight tuning by cargo density was tried (higher weight = straighter / more perpendicular)
                                          it has some benefits, but also has unwanted side effects - increases overlap of vertical edges -->
                                    <!--!weight="${len(doc_helper.cargos_accepted_by_industry(industry, economy))}"-->
                                    tooltip="${doc_helper.get_cargo_name(cargo)} -> ${doc_helper.get_industry_name(industry, economy)}"
                                    color="${doc_helper.get_cargo_colour_as_hex_triple_with_hash(cargo, economy)}"
                                    arrowsize=2
                                    arrowhead=normal
                                    penwidth=5
                                    <tal:head_is_cluster condition="getattr(industry, 'town_industry_for_cargoflow', False)">
                                        lhead="cluster_town_industries"
                                        style="invis"
                                    </tal:head_is_cluster>
                                ]
                            </tal:test>
                            <tal:test condition="cargo.id in doc_helper.get_cargoflow_graph_tuning(economy).get('cargos_with_individual_accept_nodes',[])">
                                C_${cargo.id}_${industry.id}_2 [
                                    shape="box"
                                    label="${doc_helper.get_cargo_name(cargo)}"
                                    href="cargos.html#${cargo.id}"
                                    target="_top"
                                    fontname="sans-serif"
                                    fontcolor=white
                                    fontsize=32
                                    style="filled"
                                    labelloc=c
                                    color="${doc_helper.get_cargo_colour_as_hex_triple_with_hash(cargo, economy)}"
                                    id="${cargo.id}_${industry.id}_2"
                                ]
                                C_${cargo.id} -> C_${cargo.id}_${industry.id}_2 [
                                    <!--! edge weight tuning by cargo density was tried (higher weight = straighter / more perpendicular)
                                          it has some benefits, but also has unwanted side effects - increases overlap of vertical edges -->
                                    <!--!weight="${len(doc_helper.cargos_accepted_by_industry(industry, economy))}"-->
                                    tooltip="${doc_helper.get_cargo_name(cargo)} -> ${doc_helper.get_industry_name(industry, economy)}"
                                    color="${doc_helper.get_cargo_colour_as_hex_triple_with_hash(cargo, economy)}"
                                    arrowsize=2
                                    arrowhead=normal
                                    penwidth=5
                                    <tal:head_is_cluster condition="getattr(industry, 'town_industry_for_cargoflow', False)">
                                        lhead="cluster_town_industries"
                                        style="invis"
                                    </tal:head_is_cluster>
                                ]
                                C_${cargo.id}_${industry.id}_2 -> ${"T_town_industries" if getattr(industry, 'town_industry_for_cargoflow', False) else "I_" + industry.id} [
                                    <!--! edge weight tuning by cargo density was tried (higher weight = straighter / more perpendicular)
                                          it has some benefits, but also has unwanted side effects - increases overlap of vertical edges -->
                                    <!--!weight="${len(doc_helper.cargos_accepted_by_industry(industry, economy))}"-->
                                    tooltip="${doc_helper.get_cargo_name(cargo)} -> ${doc_helper.get_industry_name(industry, economy)}"
                                    color="${doc_helper.get_cargo_colour_as_hex_triple_with_hash(cargo, economy)}"
                                    arrowsize=2
                                    arrowhead=normal
                                    penwidth=5
                                ]
                            </tal:test>
                        </tal:not_banned>
                    </tal:accepted_cargos>
                    <tal:produced_cargos repeat="cargo doc_helper.cargos_produced_by_industry(industry, economy)">
                        <tal:not_banned condition="(cargo.id not in banned_cargos) and (cargo.id not in doc_helper.get_cargoflow_supply_cargos())">
                            <tal:test condition="cargo.id not in doc_helper.get_cargoflow_graph_tuning(economy).get('cargos_with_individual_produce_nodes',[])">
                                I_${industry.id} -> C_${cargo.id} [
                                    <!--! edge weight tuning by cargo density was tried (higher weight = straighter / more perpendicular)
                                          it has some benefits, but also has unwanted side effects - increases overlap of vertical edges -->
                                    <!--!weight="${len(doc_helper.cargos_produced_by_industry(industry, economy))}"-->
                                    tooltip="${doc_helper.get_industry_name(industry, economy)} -> ${doc_helper.get_cargo_name(cargo)}"
                                    color="${doc_helper.get_cargo_colour_as_hex_triple_with_hash(cargo, economy)}"
                                    dir=back
                                    arrowtail=none
                                    #arrowtail=nonenoneinv
                                    arrowsize=2
                                    penwidth=5
                                ]
                            </tal:test>
                            <tal:test condition="cargo.id in doc_helper.get_cargoflow_graph_tuning(economy).get('cargos_with_individual_produce_nodes',[])">
                                I_${industry.id} -> I_${industry.id}_${cargo.id}_2 [
                                    <!--! edge weight tuning by cargo density was tried (higher weight = straighter / more perpendicular)
                                          it has some benefits, but also has unwanted side effects - increases overlap of vertical edges -->
                                    <!--!weight="${len(doc_helper.cargos_produced_by_industry(industry, economy))}"-->
                                    tooltip="${doc_helper.get_industry_name(industry, economy)} -> ${doc_helper.get_cargo_name(cargo)}"
                                    color="${doc_helper.get_cargo_colour_as_hex_triple_with_hash(cargo, economy)}"
                                    dir=back
                                    arrowtail=none
                                    #arrowtail=nonenoneinv
                                    arrowsize=2
                                    penwidth=5
                                ]
                                I_${industry.id}_${cargo.id}_2 [
                                    shape="box"
                                    label="${doc_helper.get_cargo_name(cargo)}"
                                    href="cargos.html#${cargo.id}"
                                    target="_top"
                                    fontname="sans-serif"
                                    fontcolor=white
                                    fontsize=32
                                    style="filled"
                                    labelloc=c
                                    color="${doc_helper.get_cargo_colour_as_hex_triple_with_hash(cargo, economy)}"
                                    id="${cargo.id}_${industry.id}_2"
                                ]
                                I_${industry.id}_${cargo.id}_2 -> C_${cargo.id} [
                                    <!--! edge weight tuning by cargo density was tried (higher weight = straighter / more perpendicular)
                                          it has some benefits, but also has unwanted side effects - increases overlap of vertical edges -->
                                    <!--!weight="${len(doc_helper.cargos_produced_by_industry(industry, economy))}"-->
                                    tooltip="${doc_helper.get_industry_name(industry, economy)} -> ${doc_helper.get_cargo_name(cargo)}"
                                    color="${doc_helper.get_cargo_colour_as_hex_triple_with_hash(cargo, economy)}"
                                    dir=back
                                    arrowtail=none
                                    #arrowtail=nonenoneinv
                                    arrowsize=2
                                    penwidth=5
                                ]
                            </tal:test>
                        </tal:not_banned>
                    </tal:produced_cargos>
                </tal:not_town_industries>
            </tal:industries>
             <!--! economy specific tuning - this supports
                  1. edge grouping subgraphs for specific nodes
                    - note this affects position and spline drawing of edges for node(s), does *not* group the actual nodes - use clusters for that
                    - edge grouping is typically brittle and can have surprising results, generally best avoided, but occasionally gets a wanted result
                  2. ranking subgraphs, to force nodes to the same rank
                  3. explicit clusters which physically group nodes
                  Generally doing more than that is not advised, and will require manual tweaks directly inside the cargoflow
            -->
            <tal:group_edges_subgraphs repeat="group_edge_subgraph economy.cargoflow_graph_tuning['group_edges_subgraphs']">
                {
                    group="${economy.id}_group_edges_${repeat.group_edge_subgraph.index}"
                    <tal:nodes repeat="node group_edge_subgraph">
                        ${doc_helper.unpack_cargoflow_node_name(node)}
                    </tal:nodes>
                }
            </tal:group_edges_subgraphs>
            <tal:ranking_subgraphs repeat="ranking_subgraph economy.cargoflow_graph_tuning['ranking_subgraphs']">
                {
                    rank=${ranking_subgraph[0]}
                    <tal:nodes repeat="node ranking_subgraph[1]">
                        ${doc_helper.unpack_cargoflow_node_name(node)}
                    </tal:nodes>
                }
            </tal:ranking_subgraphs>
            <tal:clusters repeat="cluster economy.cargoflow_graph_tuning['clusters']">
                subgraph cluster_${economy.id}_${repeat.cluster.index} {
                    <!--! optional color for cluster - could later be replaced by a style class somehow? -->
                    <tal:optional_color condition="cluster.get('color', False)">
                        color=${cluster['color']}
                    </tal:optional_color>
                    <!--! optionally force all nodes in this cluster to same rank -->
                    <tal:optional_rank condition="cluster.get('rank', False)">
                        rank=${cluster['rank']}
                    </tal:optional_rank>
                    <tal:nodes repeat="node cluster['nodes']">
                        ${doc_helper.unpack_cargoflow_node_name(node)}
                    </tal:nodes>
                }
            </tal:clusters>
        }
    </tal:vars>
</tal:economies>
